<style>
  .filter-block-body {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-in-out;
  }

  .dropdown-toggle {
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: relative;
  }

  /* When active, open dropdown */
  .dropdown-toggle.active::after {
    transform: rotate(180deg);
  }

  .dropdown-toggle.active + .filter-block-body {
    max-height: 500px; /* Adjust height as needed */
  }
</style>

<div class="filter-bg">
  <aside class="sidebar-col">
    <div class="filters-sidebar">
      <h4 class="filter-header h4 dropdown-toggle">Filters</h4>
      <div class="filter-body">
        <!-- Price Range Filter -->
        <div class="filter-block">
          <div class="filter-block-title h5 dropdown-toggle">Price</div>
          <div class="filter-block-body">
            <input type="range" id="price-slider" min="0" step="100">
            <span id="price-value">₹0 - ₹0</span>
          </div>
        </div>

        <!-- Gender Filter -->
        <div class="filter-block" id="gender-filter-section">
          <div class="filter-block-title h5 dropdown-toggle">Gender</div>
          <div class="filter-block-body" id="gender-filters"></div>
        </div>

        <!-- Category Filter -->
        <div class="filter-block" id="category-filter-section">
          <div class="filter-block-title h5 dropdown-toggle">Categories</div>
          <div class="filter-block-body" id="category-filters"></div>
        </div>
      </div>
    </div>
  </aside>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const priceSlider = document.getElementById('price-slider');
    const priceValue = document.getElementById('price-value');
    const products = document.querySelectorAll('#product-list .product-item');
    const genderContainer = document.getElementById('gender-filters');
    const categoryContainer = document.getElementById('category-filters');

    let maxPrice = 0;
    let genderCount = {};
    let categoryCount = {};

    // Check if products exist
    if (!products.length) {
      console.warn('No products found.');
      return;
    }

    // Get max price and count filters dynamically
    products.forEach((product) => {
      let price = parseInt(product.getAttribute('data-price'));
      maxPrice = Math.max(maxPrice, price);

      let tags = product.getAttribute('data-tags')?.split(',');
      if (!tags) return; // If no tags, skip this product

      tags.forEach((tag) => {
        let cleanTag = tag.trim();
        if (['Men', 'Women', 'Kids'].includes(cleanTag)) {
          genderCount[cleanTag] = (genderCount[cleanTag] || 0) + 1;
        } else {
          categoryCount[cleanTag] = (categoryCount[cleanTag] || 0) + 1;
        }
      });
    });

    // Set price slider max dynamically
    priceSlider.max = maxPrice;
    priceSlider.value = maxPrice;
    priceValue.innerText = `₹0 - ₹${maxPrice}`;

    // Generate gender filter dynamically
    if (Object.keys(genderCount).length > 0) {
      genderContainer.innerHTML = Object.keys(genderCount)
        .map(
          (gender) =>
            `<label><input type="checkbox" class="gender-filter" value="${gender}"> ${gender} (${genderCount[gender]})</label>`
        )
        .join('');
    } else {
      document.getElementById('gender-filter-section').style.display = 'none';
    }

    // Generate category filter dynamically
    if (Object.keys(categoryCount).length > 0) {
      categoryContainer.innerHTML = Object.keys(categoryCount)
        .map(
          (category) =>
            `<label><input type="checkbox" class="category-filter" value="${category}"> ${category} (${categoryCount[category]})</label>`
        )
        .join('');
    } else {
      document.getElementById('category-filter-section').style.display = 'none';
    }

    // Ensure dropdown functionality works
    document.querySelectorAll('.dropdown-toggle').forEach((toggle) => {
      toggle.addEventListener('click', function () {
        this.classList.toggle('active');
      });
    });

    // Filtering logic
    function filterProducts() {
      const maxPrice = parseInt(priceSlider.value);
      const selectedGenders = [...document.querySelectorAll('.gender-filter:checked')].map((cb) => cb.value);
      const selectedCategories = [...document.querySelectorAll('.category-filter:checked')].map((cb) => cb.value);

      products.forEach((product) => {
        const productPrice = parseInt(product.getAttribute('data-price'));
        const productTags = product.getAttribute('data-tags')?.split(',');

        if (!productTags) return;

        const matchesPrice = productPrice <= maxPrice;
        const matchesGender = selectedGenders.length === 0 || selectedGenders.some((g) => productTags.includes(g));
        const matchesCategory =
          selectedCategories.length === 0 || selectedCategories.some((c) => productTags.includes(c));

        product.style.display = matchesPrice && matchesGender && matchesCategory ? 'block' : 'none';
      });
    }

    // Event Listeners
    priceSlider.addEventListener('input', function () {
      priceValue.innerText = `₹0 - ₹${priceSlider.value}`;
      filterProducts();
    });

    document.querySelectorAll('.gender-filter, .category-filter').forEach((checkbox) => {
      checkbox.addEventListener('change', filterProducts);
    });

    // Initial filter setup
    filterProducts();
  });
</script>

{% schema %}
{
  "name": "Sidebar",
  "settings": [
    {
      "type": "text",
      "id": "collection_heading",
      "label": "Filter Title",
      "default": "Category"
    },
    {
      "type": "collection_list",
      "id": "collections_list",
      "label": "Choose Collections"
    }
  ]
}
{% endschema %}
