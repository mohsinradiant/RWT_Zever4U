{% comment %}
  Renders a header search modal. Should be used with 'header.liquid'

  Accepts:
  - input_id: {String} Id for the search input element (required)

  Usage:
  {% render 'header-search', input_id: 'My-Id'%}
{% endcomment %}

<details-modal class="header__search">
  <details>
    <summary
      style="text-decoration: none;"
      class="header__icon header__icon--search header__icon--summary link focus-inset modal__toggle"
      aria-haspopup="dialog"
      aria-label="{{ 'general.search.search' | t }}"
    >
      <span>
        <i style="scale: 1.36;" class="fa-solid fa-magnifying-glass"></i>
        <span class="svg-wrapper header__icon-close">
          {{- 'icon-close.svg' | inline_asset_content -}}
        </span>
      </span>
    </summary>
    <div
      class="search-modal modal__content gradient"
      role="dialog"
      aria-modal="true"
      aria-label="{{ 'general.search.search' | t }}"
    >
      <div class="modal-overlay"></div>
      <div
        class="search-modal__content{% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_vertical_offset < 0 %} search-modal__content-top{% else %} search-modal__content-bottom{% endif %}"
        tabindex="-1"
      >
        {%- if settings.predictive_search_enabled -%}
          <predictive-search class="search-modal__form" data-loading-text="{{ 'accessibility.loading' | t }}">
        {%- else -%}
          <search-form class="search-modal__form">
        {%- endif -%}
        <style>
          .search__input {
            width: 100%;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ccc;
            outline: none;
          }

          .placeholder-animation {
            position: relative;
            font-size: 16px;
            color: rgba(0, 0, 0, 0.5);
            pointer-events: none;
            display: flex;
            user-select: none;
          }

          .placeholder-text {
            display: inline-block;
            white-space: nowrap;
            overflow: hidden;
            border-right: 2px solid rgba(0, 0, 0, 0.5);
            animation: blinkCursor 0.8s steps(2, start) infinite;
          }

          @keyframes blinkCursor {
            50% {
              border-color: transparent;
            }
          }
        </style>
        <form action="{{ routes.search_url }}" method="get" role="search" class="search search-modal__form">
          <div class="field" style="position: relative; display: inline-block;">
            <span class="placeholder-animation"> Search for <span class="placeholder-text"></span> </span>

            <input
              class="search__input field__input"
              id="{{ input_id }}"
              type="search"
              name="q"
              value="{{ search.terms | escape }}"
              placeholder=""
              onfocus="hidePlaceholder()"
              onblur="showPlaceholder()"
              {%- if settings.predictive_search_enabled -%}
                role="combobox"
                aria-expanded="false"
                aria-owns="predictive-search-results"
                aria-controls="predictive-search-results"
                aria-haspopup="listbox"
                aria-autocomplete="list"
                autocorrect="off"
                autocomplete="off"
                autocapitalize="off"
                spellcheck="false"
              {%- endif -%}
            >

            <script>
              const placeholderText = document.querySelector('.placeholder-text');
              const searchInput = document.getElementById('search-input');

              const words = ['Rings', 'Earrings', 'Pendants', 'Necklaces', 'Bracelets'];
              let wordIndex = 0;
              let charIndex = 0;
              let typingSpeed = 120;
              let erasingSpeed = 80;
              let delayBetweenWords = 1500;
              let isErasing = false;

              function typeEffect() {
                if (!isErasing) {
                  if (charIndex < words[wordIndex].length) {
                    placeholderText.textContent += words[wordIndex][charIndex];
                    charIndex++;
                    setTimeout(typeEffect, typingSpeed);
                  } else {
                    setTimeout(() => {
                      isErasing = true;
                      typeEffect();
                    }, delayBetweenWords);
                  }
                } else {
                  if (charIndex > 0) {
                    placeholderText.textContent = words[wordIndex].substring(0, charIndex - 1);
                    charIndex--;
                    setTimeout(typeEffect, erasingSpeed);
                  } else {
                    isErasing = false;
                    wordIndex = (wordIndex + 1) % words.length;
                    setTimeout(typeEffect, typingSpeed);
                  }
                }
              }

              function hidePlaceholder() {
                document.querySelector('.placeholder-animation').style.opacity = '0';
              }

              function showPlaceholder() {
                if (!searchInput.value) {
                  document.querySelector('.placeholder-animation').style.opacity = '1';
                }
              }

              typeEffect();
            </script>
            <label class="field__label" for="{{ input_id }}">{{ 'general.search.search' | t }}</label>
            <input type="hidden" name="options[prefix]" value="last">
            <button
              type="reset"
              class="reset__button field__button{% if search.terms == blank %} hidden{% endif %}"
              aria-label="{{ 'general.search.reset' | t }}"
            >
              <span class="svg-wrapper">
                {{- 'icon-reset.svg' | inline_asset_content -}}
              </span>
            </button>
            <button class="search__button field__button" aria-label="{{ 'general.search.search' | t }}">
              <span class="svg-wrapper">
                {{- 'icon-search.svg' | inline_asset_content -}}
              </span>
            </button>
          </div>

          {%- if settings.predictive_search_enabled -%}
            <div class="predictive-search predictive-search--header" tabindex="-1" data-predictive-search>
              {%- render 'loading-spinner', class: 'predictive-search__loading-state' -%}
            </div>

            <span class="predictive-search-status visually-hidden" role="status" aria-hidden="true"></span>
          {%- endif -%}
        </form>
        {%- if settings.predictive_search_enabled -%}
          </predictive-search>
        {%- else -%}
          </search-form>
        {%- endif -%}
        <button
          type="button"
          class="search-modal__close-button modal__close-button link link--text focus-inset"
          aria-label="{{ 'accessibility.close' | t }}"
        >
          <span class="svg-wrapper">
            {{- 'icon-close.svg' | inline_asset_content -}}
          </span>
        </button>
      </div>
    </div>
  </details>
</details-modal>
